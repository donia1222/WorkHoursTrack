export interface Job {
  id: string;
  name: string;
  company?: string;
  address?: string;
  street?: string;
  city?: string;
  postalCode?: string;
  country?: string;
  hourlyRate?: number;
  currency?: string;
  color: string;
  defaultHours: number;
  isActive: boolean;
  description?: string;
  contactPerson?: string;
  contactEmail?: string;
  contactPhone?: string;
  createdAt: string;
  // New fields for advanced job management
  salary?: {
    enabled?: boolean;
    type: 'hourly' | 'monthly' | 'annual';
    amount: number;
    currency: string;
    overtimeEnabled?: boolean;
    overtimeRate?: number;
  };
  schedule?: {
    enabled?: boolean; // Enable/disable schedule functionality
    // Weekly schedule - individual schedule for each day
    weeklySchedule?: {
      [key: number]: {
        startTime: string; // HH:MM format
        endTime: string; // HH:MM format
        // Support for split shifts
        secondStartTime?: string; // HH:MM format for split shift
        secondEndTime?: string; // HH:MM format for split shift
        hasSplitShift?: boolean; // Flag to enable split shift
        breakTime?: number; // minutes
      } | null; // null means no schedule for that day
    };
    // Legacy fields for backward compatibility
    startTime?: string; // HH:MM format
    endTime?: string; // HH:MM format
    secondStartTime?: string; // HH:MM format for split shift
    secondEndTime?: string; // HH:MM format for split shift
    hasSplitShift?: boolean; // Flag to enable split shift
    workDays?: number[]; // 0=Sunday, 1=Monday, etc.
    breakTime?: number; // minutes
    // Auto-scheduling feature
    autoSchedule?: boolean; // Automatically add work days to calendar
  };
  billing?: {
    enabled: boolean;
    invoicePrefix?: string;
    taxRate?: number;
    notes?: string;
    userData?: {
      name?: string;
      address?: string;
      phone?: string;
      email?: string;
      isCompany?: boolean;
      companyName?: string;
      taxId?: string;
      // Banking information
      bankAccount?: string;
      bankName?: string;
      swiftCode?: string;
      // Professional details
      website?: string;
      logoUrl?: string;
    };
  };
  location?: {
    address: string;
    latitude?: number;
    longitude?: number;
    radius?: number; // meters for geofencing
  };
  // Auto Timer Settings
  autoTimer?: {
    enabled: boolean; // Enable automatic timer
    geofenceRadius: number; // Detection radius in meters (default: 100)
    delayStart: number; // Minutes to wait before starting timer (default: 2)
    delayStop: number; // Minutes to wait before stopping timer (default: 2)
    startDelayMinutes?: number; // Alternative name for SimpleAutoTimer compatibility
    stopDelayMinutes?: number; // Alternative name for SimpleAutoTimer compatibility
    radius?: number; // Alternative name for geofenceRadius
    notifications: boolean; // Show in-app notifications (default: true)
  };
}

export interface WorkDay {
  id: string;
  date: string;
  jobId?: string; // Optional for free days
  hours: number;
  notes?: string;
  overtime: boolean;
  type: 'work' | 'free' | 'vacation' | 'sick'; // Day type
  // New fields for enhanced scheduling
  startTime?: string; // HH:MM format (scheduled time)
  endTime?: string; // HH:MM format (scheduled time)
  secondStartTime?: string; // For split shifts
  secondEndTime?: string; // For split shifts
  isAutoGenerated?: boolean; // Flag for auto-scheduled days
  // Actual work session times
  actualStartTime?: string; // HH:MM:SS format (actual start time from timer/autotimer)
  actualEndTime?: string; // HH:MM:SS format (actual end time from timer/autotimer)
  // Break time tracking
  breakHours?: number; // Hours spent on breaks/pauses during the work day
  // Standard hours for overtime calculation
  standardHours?: number; // Standard hours configured when work day was created (default 8)
  createdAt: string;
  updatedAt: string;
}

export interface WorkDayWithJob extends WorkDay {
  job: Job;
}

export const DEFAULT_COLORS = [
  '#007AFF', // Blue
  '#30D158', // Green
  '#FF9500', // Orange
  '#FF3B30', // Red
  '#AF52DE', // Purple
  '#FF2D92', // Pink
  '#32D74B', // Light Green
  '#007AFF', // System Blue
  '#5856D6', // Indigo
  '#FF6B6B', // Coral
];

export const DEFAULT_JOB: Job = {
  id: 'default',
  name: 'Trabajo Principal',
  company: 'Mi Empresa',
  address: '',
  hourlyRate: 0,
  currency: 'EUR',
  color: '#007AFF',
  defaultHours: 8,
  isActive: true,
  description: '',
  contactPerson: '',
  contactEmail: '',
  contactPhone: '',
  createdAt: new Date().toISOString(),
};

export const DAY_TYPES = {
  work: {
    label: 'Día trabajado',
    color: '#30D158',
    icon: 'clock.fill',
  },
  free: {
    label: 'Día libre',
    color: '#007AFF',
    icon: 'calendar',
  },
  vacation: {
    label: 'Vacaciones',
    color: '#FF9500',
    icon: 'sun.max.fill',
  },
  sick: {
    label: 'Día de enfermedad',
    color: '#FF3B30',
    icon: 'cross.fill',
  },
} as const;

// Timer session interfaces
export interface StoredActiveSession {
  jobId: string;
  startTime: string;
  notes: string;
  isPaused?: boolean;
  pausedElapsedTime?: number;
}